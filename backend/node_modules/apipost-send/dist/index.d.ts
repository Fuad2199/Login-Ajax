declare class ApipostRequest {
    option: any;
    version: string;
    jsonschema: any;
    target_id: any;
    isCloud: number;
    requestLink: any;
    constructor(opts?: any);
    ConvertResult(status: string, message: string, data?: any): any;
    getCachePath(): any;
    formatQueries(arr: any[]): any;
    setQueryString(uri: string, paras: any): {
        uri: string;
        host: any;
        fullPath: any;
        baseUri: string;
    };
    createAuthHeaders(target: any): any;
    formatRequestHeaders(arr: any[], mode: string): any;
    formatUrlencodeBodys(arr: any[]): string;
    getBase64Mime(dataurl: string): {
        ext: any;
        mime: any;
    } | null;
    formatFormDataBodys(forms: any, arr: any[]): any;
    formatRawJsonBodys(raw?: string): string;
    formatRawBodys(raw?: string): string;
    formatRequestBodys(target: any): any;
    formatDisplayRequestBodys(target: any): any;
    responseAt(): string;
    getCaseInsensitive(object: any, keyToFind: any): any;
    setCaseInsensitive(obj: any, path: any, value: any): void;
    getDigestAuthString(target: any, method: any, fullPath: any, digest: any): string;
    getNTLMAuthString(target: any, type2msg: any, ntlm: any): any;
    formatResponseData(error: any, response: any, target: any): Promise<unknown>;
    abort(): void;
    request(target: any, extra_headers: any): Promise<unknown>;
}

export { ApipostRequest as default };
